// <auto-generated />
using System;
using DataAccessEF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessEF.Migrations
{
    [DbContext(typeof(IotContext))]
    partial class IotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Data", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<double>("CurrentValue")
                        .HasColumnType("double");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("EnergyValue")
                        .HasColumnType("double");

                    b.Property<double>("PowerValue")
                        .HasColumnType("double");

                    b.Property<long?>("SensorId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("VoltageValue")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("SensorId");

                    b.ToTable("Data");
                });

            modelBuilder.Entity("Domain.Sensor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("SensorId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Sensor");
                });

            modelBuilder.Entity("Domain.Data", b =>
                {
                    b.HasOne("Domain.Sensor", null)
                        .WithMany("IotData")
                        .HasForeignKey("SensorId");
                });

            modelBuilder.Entity("Domain.Sensor", b =>
                {
                    b.Navigation("IotData");
                });
#pragma warning restore 612, 618
        }
    }
}
